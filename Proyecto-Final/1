{
  "_args": [
    [
      "marked-terminal@https://registry.npmjs.org/marked-terminal/-/marked-terminal-5.1.1.tgz",
      "/usr/local/lib/node_modules/firebase-tools"
    ]
  ],
  "_from": "marked-terminal@https://registry.npmjs.org/marked-terminal/-/marked-terminal-5.1.1.tgz",
  "_id": "marked-terminal@5.1.1",
  "_inCache": true,
  "_location": "/firebase-tools/marked-terminal",
  "_phantomChildren": {},
  "_requested": {
    "name": "marked-terminal",
    "raw": "marked-terminal@https://registry.npmjs.org/marked-terminal/-/marked-terminal-5.1.1.tgz",
    "rawSpec": "https://registry.npmjs.org/marked-terminal/-/marked-terminal-5.1.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/marked-terminal/-/marked-terminal-5.1.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/firebase-tools"
  ],
  "_resolved": "https://registry.npmjs.org/marked-terminal/-/marked-terminal-5.1.1.tgz",
  "_shasum": "d2edc2991841d893ee943b44b40b2ee9518b4d9f",
  "_shrinkwrap": null,
  "_spec": "marked-terminal@https://registry.npmjs.org/marked-terminal/-/marked-terminal-5.1.1.tgz",
  "_where": "/usr/local/lib/node_modules/firebase-tools",
  "author": {
    "name": "Mikael Brevik"
  },
  "browser": "./index.js",
  "bugs": {
    "url": "https://github.com/mikaelbr/marked-terminal/issues"
  },
  "dependencies": {
    "ansi-escapes": "^5.0.0",
    "cardinal": "^2.1.1",
    "chalk": "^5.0.0",
    "cli-table3": "^0.6.1",
    "node-emoji": "^1.11.0",
    "supports-hyperlinks": "^2.2.0"
  },
  "description": "A custom render for marked to output to the Terminal",
  "devDependencies": {
    "@rollup/plugin-commonjs": "^21.0.1",
    "@rollup/plugin-node-resolve": "^13.1.3",
    "marked": "^4.0.10",
    "mocha": "^9.2.0",
    "rollup": "^2.66.1"
  },
  "directories": {
    "example": "example"
  },
  "engines": {
    "node": ">=14.13.1 || >=16.0.0"
  },
  "exports": {
    "default": "./index.js",
    "node": {
      "import": "./index.js",
      "require": "./index.cjs"
    }
  },
  "files": [
    "index.cjs",
    "index.js"
  ],
  "homepage": "https://github.com/mikaelbr/marked-terminal",
  "keywords": [
    "markdown",
    "markdown-to-terminal",
    "marked",
    "render",
    "terminal"
  ],
  "license": "MIT",
  "main": "./index.cjs",
  "name": "marked-terminal",
  "optionalDependencies": {},
  "peerDependencies": {
    "marked": "^1.0.0 || ^2.0.0 || ^3.0.0 || ^4.0.0"
  },
  "readme": "marked-terminal\n===\n\n> Custom Renderer for [marked](https://github.com/chjj/marked)\nallowing for printing Markdown to the Terminal. Supports pretty tables, syntax\nhighlighting for javascript, and overriding all colors and styles.\n\nCould for instance be used to print usage information.\n\n[![build](https://github.com/mikaelbr/marked-terminal/actions/workflows/ci.yml/badge.svg)](https://github.com/mikaelbr/marked-terminal/actions/workflows/ci.yml) [![npm marked-terminal](https://img.shields.io/npm/v/marked-terminal.svg)](https://www.npmjs.com/package/marked-terminal)\n\n## Install\n\n```sh\nnpm install marked marked-terminal\n```\n\n## Example\n\n```javascript\nvar marked = require('marked');\nvar TerminalRenderer = require('marked-terminal');\n\nmarked.setOptions({\n  // Define custom renderer\n  renderer: new TerminalRenderer()\n});\n\n// Show the parsed data\nconsole.log(marked('# Hello \\n This is **markdown** printed in the `terminal`'));\n```\n\nThis will produce the following:\n\n![Screenshot of marked-terminal](./screenshot.png)\n\n\n### Syntax Highlighting\n\nAlso have support for syntax highlighting using [cardinal](https://github.com/thlorenz/cardinal).\nYou can override highlight defaults by passing in settings as the second argument for TerminalRenderer,\nor you can create a `.cardinalrc` as defined in the [cardinal README](https://github.com/thlorenz/cardinal).\n\nHaving the following markdown input:\n\n<pre>\n```js\nvar foo = function(bar) {\n  console.log(bar);\n};\nfoo('Hello');\n```\n</pre>\n\n...we will convert it into terminal format:\n\n```javascript\n// Show the parsed data\nconsole.log(marked(exampleSource));\n```\n\nThis will produce the following:\n\n![Screenshot of marked-terminal](./screenshot2.png)\n\n## API\n\nConstructur: `new TerminalRenderer([options][, highlightOptions])`\n\n### `options`\nOptional\nUsed to override default styling.\n\nDefault values are:\n\n```javascript\nvar defaultOptions = {\n  // Colors\n  code: chalk.yellow,\n  blockquote: chalk.gray.italic,\n  html: chalk.gray,\n  heading: chalk.green.bold,\n  firstHeading: chalk.magenta.underline.bold,\n  hr: chalk.reset,\n  listitem: chalk.reset,\n  table: chalk.reset,\n  paragraph: chalk.reset,\n  strong: chalk.bold,\n  em: chalk.italic,\n  codespan: chalk.yellow,\n  del: chalk.dim.gray.strikethrough,\n  link: chalk.blue,\n  href: chalk.blue.underline,\n\n  // Formats the bulletpoints and numbers for lists\n  list: function (body, ordered) {/* ... */},\n\n  // Reflow and print-out width\n  width: 80, // only applicable when reflow is true\n  reflowText: false,\n\n  // Should it prefix headers?\n  showSectionPrefix: true,\n\n  // Whether or not to undo marked escaping\n  // of enitities (\" -> &quot; etc)\n  unescape: true,\n\n  // Whether or not to show emojis\n  emoji: true,\n\n  // Options passed to cli-table3\n  tableOptions: {},\n\n  // The size of tabs in number of spaces or as tab characters\n  tab: 3 // examples: 4, 2, \\t, \\t\\t\n\n  image: function (href, title, text) {} // function for overriding the default image handling.\n};\n```\n\n#### Example of overriding defaults\n```javascript\nmarked.setOptions({\n  renderer: new TerminalRenderer({\n    codespan: chalk.underline.magenta,\n  })\n});\n```\n\n### `highlightOptions`\nOptions passed into [cardinal](https://github.com/thlorenz/cardinal). See\nreadme there to see what options to pass.\n\n\nSee [more examples](./example/)\n\n## Related\n\n- [ink-markdown](https://github.com/cameronhunter/ink-markdown) - Markdown component for Ink\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mikaelbr/marked-terminal.git"
  },
  "scripts": {
    "build": "rollup -c",
    "prepack": "npm run build",
    "test": "FORCE_HYPERLINK=0 mocha tests/*.js --reporter spec"
  },
  "version": "5.1.1"
}
